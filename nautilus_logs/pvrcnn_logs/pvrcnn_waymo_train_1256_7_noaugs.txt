.
..
.empty
.git
.gitignore
.ipynb_checkpoints
LICENSE
README.md
build
checkpoints
data
demo_notebook.ipynb
docs
install
kitti-dataset.ipynb
mayavi demo.ipynb
output
output_wk5_res
output_wk6_res
pcdet
pcdet.egg-info
requirements.txt
saved_pred
setup.py
test.png
tools
/usr/local/lib/python3.6/dist-packages/spconv:/usr/local/nvidia/lib:/usr/local/nvidia/lib64
1.1.0
Requirement already satisfied: numpy in /usr/local/lib/python3.6/dist-packages (from -r requirements.txt (line 1)) (1.18.2)
Requirement already satisfied: torch>=1.1 in /usr/local/lib/python3.6/dist-packages (from -r requirements.txt (line 2)) (1.1.0)
Collecting numba
  Downloading numba-0.51.2-cp36-cp36m-manylinux2014_x86_64.whl (3.1 MB)
Requirement already satisfied: tensorboardX in /usr/local/lib/python3.6/dist-packages (from -r requirements.txt (line 4)) (2.0)
Requirement already satisfied: easydict in /usr/local/lib/python3.6/dist-packages (from -r requirements.txt (line 5)) (1.9)
Requirement already satisfied: pyyaml in /usr/local/lib/python3.6/dist-packages (from -r requirements.txt (line 6)) (5.3.1)
Requirement already satisfied: scikit-image in /usr/local/lib/python3.6/dist-packages (from -r requirements.txt (line 7)) (0.16.2)
Requirement already satisfied: tqdm in /usr/local/lib/python3.6/dist-packages (from -r requirements.txt (line 8)) (4.45.0)
Requirement already satisfied: setuptools in /usr/local/lib/python3.6/dist-packages (from numba->-r requirements.txt (line 3)) (46.1.3)
Collecting llvmlite<0.35,>=0.34.0.dev0
  Downloading llvmlite-0.34.0-cp36-cp36m-manylinux2010_x86_64.whl (24.6 MB)
Requirement already satisfied: protobuf>=3.8.0 in /usr/local/lib/python3.6/dist-packages (from tensorboardX->-r requirements.txt (line 4)) (3.11.3)
Requirement already satisfied: six in /usr/local/lib/python3.6/dist-packages (from tensorboardX->-r requirements.txt (line 4)) (1.14.0)
Requirement already satisfied: imageio>=2.3.0 in /usr/local/lib/python3.6/dist-packages (from scikit-image->-r requirements.txt (line 7)) (2.8.0)
Requirement already satisfied: matplotlib!=3.0.0,>=2.0.0 in /usr/local/lib/python3.6/dist-packages (from scikit-image->-r requirements.txt (line 7)) (3.2.1)
Requirement already satisfied: pillow>=4.3.0 in /usr/local/lib/python3.6/dist-packages (from scikit-image->-r requirements.txt (line 7)) (7.0.0)
Requirement already satisfied: PyWavelets>=0.4.0 in /usr/local/lib/python3.6/dist-packages (from scikit-image->-r requirements.txt (line 7)) (1.1.1)
Requirement already satisfied: networkx>=2.0 in /usr/local/lib/python3.6/dist-packages (from scikit-image->-r requirements.txt (line 7)) (2.4)
Requirement already satisfied: scipy>=0.19.0 in /usr/local/lib/python3.6/dist-packages (from scikit-image->-r requirements.txt (line 7)) (1.4.1)
Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib!=3.0.0,>=2.0.0->scikit-image->-r requirements.txt (line 7)) (2.4.6)
Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib!=3.0.0,>=2.0.0->scikit-image->-r requirements.txt (line 7)) (2.8.1)
Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib!=3.0.0,>=2.0.0->scikit-image->-r requirements.txt (line 7)) (1.2.0)
Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.6/dist-packages (from matplotlib!=3.0.0,>=2.0.0->scikit-image->-r requirements.txt (line 7)) (0.10.0)
Requirement already satisfied: decorator>=4.3.0 in /usr/local/lib/python3.6/dist-packages (from networkx>=2.0->scikit-image->-r requirements.txt (line 7)) (4.4.2)
Installing collected packages: llvmlite, numba
Successfully installed llvmlite-0.34.0 numba-0.51.2
WARNING: You are using pip version 20.0.2; however, version 20.2.4 is available.
You should consider upgrading via the '/usr/bin/python3.6 -m pip install --upgrade pip' command.
running develop
running egg_info
writing pcdet.egg-info/PKG-INFO
writing dependency_links to pcdet.egg-info/dependency_links.txt
writing requirements to pcdet.egg-info/requires.txt
writing top-level names to pcdet.egg-info/top_level.txt
reading manifest file 'pcdet.egg-info/SOURCES.txt'
writing manifest file 'pcdet.egg-info/SOURCES.txt'
running build_ext
copying build/lib.linux-x86_64-3.6/pcdet/ops/iou3d_nms/iou3d_nms_cuda.cpython-36m-x86_64-linux-gnu.so -> pcdet/ops/iou3d_nms
copying build/lib.linux-x86_64-3.6/pcdet/ops/roiaware_pool3d/roiaware_pool3d_cuda.cpython-36m-x86_64-linux-gnu.so -> pcdet/ops/roiaware_pool3d
copying build/lib.linux-x86_64-3.6/pcdet/ops/roipoint_pool3d/roipoint_pool3d_cuda.cpython-36m-x86_64-linux-gnu.so -> pcdet/ops/roipoint_pool3d
copying build/lib.linux-x86_64-3.6/pcdet/ops/pointnet2/pointnet2_stack/pointnet2_stack_cuda.cpython-36m-x86_64-linux-gnu.so -> pcdet/ops/pointnet2/pointnet2_stack
copying build/lib.linux-x86_64-3.6/pcdet/ops/pointnet2/pointnet2_batch/pointnet2_batch_cuda.cpython-36m-x86_64-linux-gnu.so -> pcdet/ops/pointnet2/pointnet2_batch
Creating /usr/local/lib/python3.6/dist-packages/pcdet.egg-link (link to .)
Adding pcdet 0.3.0+fafdbd8 to easy-install.pth file

Installed /team1/codes/3dObjDet/OpenPCDet_ravi
Processing dependencies for pcdet==0.3.0+fafdbd8
Searching for PyYAML==5.3.1
Best match: PyYAML 5.3.1
Adding PyYAML 5.3.1 to easy-install.pth file

Using /usr/local/lib/python3.6/dist-packages
Searching for easydict==1.9
Best match: easydict 1.9
Adding easydict 1.9 to easy-install.pth file

Using /usr/local/lib/python3.6/dist-packages
Searching for tensorboardX==2.0
Best match: tensorboardX 2.0
Adding tensorboardX 2.0 to easy-install.pth file

Using /usr/local/lib/python3.6/dist-packages
Searching for numba==0.51.2
Best match: numba 0.51.2
Adding numba 0.51.2 to easy-install.pth file

Using /usr/local/lib/python3.6/dist-packages
Searching for spconv==1.0
Best match: spconv 1.0
Adding spconv 1.0 to easy-install.pth file

Using /usr/local/lib/python3.6/dist-packages
Searching for torch==1.1.0
Best match: torch 1.1.0
Adding torch 1.1.0 to easy-install.pth file
Installing convert-caffe2-to-onnx script to /usr/local/bin
Installing convert-onnx-to-caffe2 script to /usr/local/bin

Using /usr/local/lib/python3.6/dist-packages
Searching for numpy==1.18.2
Best match: numpy 1.18.2
Adding numpy 1.18.2 to easy-install.pth file
Installing f2py script to /usr/local/bin
Installing f2py3 script to /usr/local/bin
Installing f2py3.6 script to /usr/local/bin

Using /usr/local/lib/python3.6/dist-packages
Searching for six==1.14.0
Best match: six 1.14.0
Adding six 1.14.0 to easy-install.pth file

Using /usr/local/lib/python3.6/dist-packages
Searching for protobuf==3.11.3
Best match: protobuf 3.11.3
Adding protobuf 3.11.3 to easy-install.pth file

Using /usr/local/lib/python3.6/dist-packages
Searching for llvmlite==0.34.0
Best match: llvmlite 0.34.0
Adding llvmlite 0.34.0 to easy-install.pth file

Using /usr/local/lib/python3.6/dist-packages
Searching for setuptools==46.1.3
Best match: setuptools 46.1.3
Adding setuptools 46.1.3 to easy-install.pth file
Installing easy_install script to /usr/local/bin
Installing easy_install-3.8 script to /usr/local/bin

Using /usr/local/lib/python3.6/dist-packages
Finished processing dependencies for pcdet==0.3.0+fafdbd8
2020-11-23 07:37:18,041   INFO  **********************Start logging**********************
2020-11-23 07:37:18,042   INFO  CUDA_VISIBLE_DEVICES=ALL
2020-11-23 07:37:18,042   INFO  cfg_file         cfgs/waymo_models/pv_rcnn_no_augs.yaml
2020-11-23 07:37:18,042   INFO  batch_size       2
2020-11-23 07:37:18,042   INFO  epochs           30
2020-11-23 07:37:18,042   INFO  workers          2
2020-11-23 07:37:18,042   INFO  extra_tag        default
2020-11-23 07:37:18,042   INFO  ckpt             None
2020-11-23 07:37:18,042   INFO  pretrained_model None
2020-11-23 07:37:18,042   INFO  launcher         none
2020-11-23 07:37:18,042   INFO  tcp_port         18888
2020-11-23 07:37:18,042   INFO  sync_bn          False
2020-11-23 07:37:18,042   INFO  fix_random_seed  False
2020-11-23 07:37:18,043   INFO  ckpt_save_interval 1
2020-11-23 07:37:18,043   INFO  local_rank       0
2020-11-23 07:37:18,043   INFO  max_ckpt_save_num 30
2020-11-23 07:37:18,043   INFO  merge_all_iters_to_one_epoch False
2020-11-23 07:37:18,043   INFO  set_cfgs         None
2020-11-23 07:37:18,043   INFO  max_waiting_mins 0
2020-11-23 07:37:18,043   INFO  start_epoch      0
2020-11-23 07:37:18,043   INFO  save_to_file     False
2020-11-23 07:37:18,043   INFO  cfg.ROOT_DIR: /team1/codes/3dObjDet/OpenPCDet_ravi
2020-11-23 07:37:18,043   INFO  cfg.LOCAL_RANK: 0
2020-11-23 07:37:18,043   INFO  cfg.CLASS_NAMES: ['Vehicle', 'Pedestrian', 'Cyclist']
2020-11-23 07:37:18,043   INFO  
cfg.DATA_CONFIG = edict()
2020-11-23 07:37:18,043   INFO  cfg.DATA_CONFIG.DATASET: WaymoDataset
2020-11-23 07:37:18,043   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/waymo
2020-11-23 07:37:18,044   INFO  cfg.DATA_CONFIG.PROCESSED_DATA_TAG: waymo_processed_data
2020-11-23 07:37:18,044   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [-75.2, -75.2, -2, 75.2, 75.2, 4]
2020-11-23 07:37:18,044   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2020-11-23 07:37:18,044   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2020-11-23 07:37:18,044   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2020-11-23 07:37:18,044   INFO  
cfg.DATA_CONFIG.SAMPLED_INTERVAL = edict()
2020-11-23 07:37:18,044   INFO  cfg.DATA_CONFIG.SAMPLED_INTERVAL.train: 5
2020-11-23 07:37:18,044   INFO  cfg.DATA_CONFIG.SAMPLED_INTERVAL.test: 5
2020-11-23 07:37:18,044   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2020-11-23 07:37:18,044   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2020-11-23 07:37:18,044   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x', 'y']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2020-11-23 07:37:18,044   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2020-11-23 07:37:18,044   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2020-11-23 07:37:18,044   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity', 'elongation']
2020-11-23 07:37:18,045   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity', 'elongation']
2020-11-23 07:37:18,045   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': True}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.1, 0.1, 0.15], 'MAX_POINTS_PER_VOXEL': 5, 'MAX_NUMBER_OF_VOXELS': {'train': 80000, 'test': 90000}}]
2020-11-23 07:37:18,045   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/waymo_dataset_no_augs.yaml
2020-11-23 07:37:18,045   INFO  
cfg.MODEL = edict()
2020-11-23 07:37:18,045   INFO  cfg.MODEL.NAME: PVRCNN
2020-11-23 07:37:18,045   INFO  
cfg.MODEL.VFE = edict()
2020-11-23 07:37:18,045   INFO  cfg.MODEL.VFE.NAME: MeanVFE
2020-11-23 07:37:18,045   INFO  
cfg.MODEL.BACKBONE_3D = edict()
2020-11-23 07:37:18,045   INFO  cfg.MODEL.BACKBONE_3D.NAME: VoxelBackBone8x
2020-11-23 07:37:18,045   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2020-11-23 07:37:18,045   INFO  cfg.MODEL.MAP_TO_BEV.NAME: HeightCompression
2020-11-23 07:37:18,045   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 256
2020-11-23 07:37:18,045   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2020-11-23 07:37:18,045   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2020-11-23 07:37:18,046   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [5, 5]
2020-11-23 07:37:18,046   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [1, 2]
2020-11-23 07:37:18,046   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [128, 256]
2020-11-23 07:37:18,046   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2]
2020-11-23 07:37:18,046   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [256, 256]
2020-11-23 07:37:18,046   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2020-11-23 07:37:18,046   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2020-11-23 07:37:18,046   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2020-11-23 07:37:18,046   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2020-11-23 07:37:18,046   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2020-11-23 07:37:18,046   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2020-11-23 07:37:18,046   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2020-11-23 07:37:18,046   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Vehicle', 'anchor_sizes': [[4.7, 2.1, 1.7]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [0], 'align_center': False, 'feature_map_stride': 8, 'matched_threshold': 0.55, 'unmatched_threshold': 0.4}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.91, 0.86, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [0], 'align_center': False, 'feature_map_stride': 8, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.78, 0.84, 1.78]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [0], 'align_center': False, 'feature_map_stride': 8, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2020-11-23 07:37:18,046   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2020-11-23 07:37:18,047   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2020-11-23 07:37:18,047   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2020-11-23 07:37:18,047   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2020-11-23 07:37:18,047   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2020-11-23 07:37:18,047   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2020-11-23 07:37:18,047   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2020-11-23 07:37:18,047   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2020-11-23 07:37:18,047   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2020-11-23 07:37:18,047   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2020-11-23 07:37:18,047   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2020-11-23 07:37:18,047   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2020-11-23 07:37:18,047   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2020-11-23 07:37:18,047   INFO  
cfg.MODEL.PFE = edict()
2020-11-23 07:37:18,047   INFO  cfg.MODEL.PFE.NAME: VoxelSetAbstraction
2020-11-23 07:37:18,048   INFO  cfg.MODEL.PFE.POINT_SOURCE: raw_points
2020-11-23 07:37:18,048   INFO  cfg.MODEL.PFE.NUM_KEYPOINTS: 4096
2020-11-23 07:37:18,048   INFO  cfg.MODEL.PFE.NUM_OUTPUT_FEATURES: 128
2020-11-23 07:37:18,048   INFO  cfg.MODEL.PFE.SAMPLE_METHOD: FPS
2020-11-23 07:37:18,048   INFO  cfg.MODEL.PFE.FEATURES_SOURCE: ['bev', 'x_conv3', 'x_conv4', 'raw_points']
2020-11-23 07:37:18,048   INFO  
cfg.MODEL.PFE.SA_LAYER = edict()
2020-11-23 07:37:18,048   INFO  
cfg.MODEL.PFE.SA_LAYER.raw_points = edict()
2020-11-23 07:37:18,048   INFO  cfg.MODEL.PFE.SA_LAYER.raw_points.MLPS: [[16, 16], [16, 16]]
2020-11-23 07:37:18,048   INFO  cfg.MODEL.PFE.SA_LAYER.raw_points.POOL_RADIUS: [0.4, 0.8]
2020-11-23 07:37:18,048   INFO  cfg.MODEL.PFE.SA_LAYER.raw_points.NSAMPLE: [16, 16]
2020-11-23 07:37:18,048   INFO  
cfg.MODEL.PFE.SA_LAYER.x_conv1 = edict()
2020-11-23 07:37:18,048   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv1.DOWNSAMPLE_FACTOR: 1
2020-11-23 07:37:18,048   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv1.MLPS: [[16, 16], [16, 16]]
2020-11-23 07:37:18,048   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv1.POOL_RADIUS: [0.4, 0.8]
2020-11-23 07:37:18,049   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv1.NSAMPLE: [16, 16]
2020-11-23 07:37:18,049   INFO  
cfg.MODEL.PFE.SA_LAYER.x_conv2 = edict()
2020-11-23 07:37:18,049   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv2.DOWNSAMPLE_FACTOR: 2
2020-11-23 07:37:18,049   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv2.MLPS: [[32, 32], [32, 32]]
2020-11-23 07:37:18,049   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv2.POOL_RADIUS: [0.8, 1.2]
2020-11-23 07:37:18,049   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv2.NSAMPLE: [16, 32]
2020-11-23 07:37:18,049   INFO  
cfg.MODEL.PFE.SA_LAYER.x_conv3 = edict()
2020-11-23 07:37:18,049   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv3.DOWNSAMPLE_FACTOR: 4
2020-11-23 07:37:18,049   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv3.MLPS: [[64, 64], [64, 64]]
2020-11-23 07:37:18,049   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv3.POOL_RADIUS: [1.2, 2.4]
2020-11-23 07:37:18,049   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv3.NSAMPLE: [16, 32]
2020-11-23 07:37:18,049   INFO  
cfg.MODEL.PFE.SA_LAYER.x_conv4 = edict()
2020-11-23 07:37:18,049   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv4.DOWNSAMPLE_FACTOR: 8
2020-11-23 07:37:18,049   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv4.MLPS: [[64, 64], [64, 64]]
2020-11-23 07:37:18,050   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv4.POOL_RADIUS: [2.4, 4.8]
2020-11-23 07:37:18,050   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv4.NSAMPLE: [16, 32]
2020-11-23 07:37:18,050   INFO  
cfg.MODEL.POINT_HEAD = edict()
2020-11-23 07:37:18,050   INFO  cfg.MODEL.POINT_HEAD.NAME: PointHeadSimple
2020-11-23 07:37:18,050   INFO  cfg.MODEL.POINT_HEAD.CLS_FC: [256, 256]
2020-11-23 07:37:18,050   INFO  cfg.MODEL.POINT_HEAD.CLASS_AGNOSTIC: True
2020-11-23 07:37:18,050   INFO  cfg.MODEL.POINT_HEAD.USE_POINT_FEATURES_BEFORE_FUSION: True
2020-11-23 07:37:18,050   INFO  
cfg.MODEL.POINT_HEAD.TARGET_CONFIG = edict()
2020-11-23 07:37:18,050   INFO  cfg.MODEL.POINT_HEAD.TARGET_CONFIG.GT_EXTRA_WIDTH: [0.2, 0.2, 0.2]
2020-11-23 07:37:18,050   INFO  
cfg.MODEL.POINT_HEAD.LOSS_CONFIG = edict()
2020-11-23 07:37:18,050   INFO  cfg.MODEL.POINT_HEAD.LOSS_CONFIG.LOSS_REG: smooth-l1
2020-11-23 07:37:18,050   INFO  
cfg.MODEL.POINT_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2020-11-23 07:37:18,050   INFO  cfg.MODEL.POINT_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.point_cls_weight: 1.0
2020-11-23 07:37:18,050   INFO  
cfg.MODEL.ROI_HEAD = edict()
2020-11-23 07:37:18,051   INFO  cfg.MODEL.ROI_HEAD.NAME: PVRCNNHead
2020-11-23 07:37:18,051   INFO  cfg.MODEL.ROI_HEAD.CLASS_AGNOSTIC: True
2020-11-23 07:37:18,051   INFO  cfg.MODEL.ROI_HEAD.SHARED_FC: [256, 256]
2020-11-23 07:37:18,051   INFO  cfg.MODEL.ROI_HEAD.CLS_FC: [256, 256]
2020-11-23 07:37:18,051   INFO  cfg.MODEL.ROI_HEAD.REG_FC: [256, 256]
2020-11-23 07:37:18,051   INFO  cfg.MODEL.ROI_HEAD.DP_RATIO: 0.3
2020-11-23 07:37:18,051   INFO  
cfg.MODEL.ROI_HEAD.NMS_CONFIG = edict()
2020-11-23 07:37:18,051   INFO  
cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN = edict()
2020-11-23 07:37:18,051   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.NMS_TYPE: nms_gpu
2020-11-23 07:37:18,051   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.MULTI_CLASSES_NMS: False
2020-11-23 07:37:18,051   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.NMS_PRE_MAXSIZE: 9000
2020-11-23 07:37:18,051   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.NMS_POST_MAXSIZE: 512
2020-11-23 07:37:18,051   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.NMS_THRESH: 0.8
2020-11-23 07:37:18,051   INFO  
cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST = edict()
2020-11-23 07:37:18,051   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.NMS_TYPE: nms_gpu
2020-11-23 07:37:18,052   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.MULTI_CLASSES_NMS: False
2020-11-23 07:37:18,052   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.NMS_PRE_MAXSIZE: 1024
2020-11-23 07:37:18,052   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.NMS_POST_MAXSIZE: 100
2020-11-23 07:37:18,052   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.NMS_THRESH: 0.7
2020-11-23 07:37:18,052   INFO  
cfg.MODEL.ROI_HEAD.ROI_GRID_POOL = edict()
2020-11-23 07:37:18,052   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.GRID_SIZE: 6
2020-11-23 07:37:18,052   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.MLPS: [[64, 64], [64, 64]]
2020-11-23 07:37:18,052   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.POOL_RADIUS: [0.8, 1.6]
2020-11-23 07:37:18,052   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.NSAMPLE: [16, 16]
2020-11-23 07:37:18,052   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.POOL_METHOD: max_pool
2020-11-23 07:37:18,052   INFO  
cfg.MODEL.ROI_HEAD.TARGET_CONFIG = edict()
2020-11-23 07:37:18,052   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.BOX_CODER: ResidualCoder
2020-11-23 07:37:18,052   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.ROI_PER_IMAGE: 128
2020-11-23 07:37:18,052   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.FG_RATIO: 0.5
2020-11-23 07:37:18,053   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.SAMPLE_ROI_BY_EACH_CLASS: True
2020-11-23 07:37:18,053   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.CLS_SCORE_TYPE: roi_iou
2020-11-23 07:37:18,053   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.CLS_FG_THRESH: 0.75
2020-11-23 07:37:18,053   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.CLS_BG_THRESH: 0.25
2020-11-23 07:37:18,053   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.CLS_BG_THRESH_LO: 0.1
2020-11-23 07:37:18,053   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.HARD_BG_RATIO: 0.8
2020-11-23 07:37:18,053   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.REG_FG_THRESH: 0.55
2020-11-23 07:37:18,053   INFO  
cfg.MODEL.ROI_HEAD.LOSS_CONFIG = edict()
2020-11-23 07:37:18,054   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.CLS_LOSS: BinaryCrossEntropy
2020-11-23 07:37:18,054   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.REG_LOSS: smooth-l1
2020-11-23 07:37:18,054   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.CORNER_LOSS_REGULARIZATION: True
2020-11-23 07:37:18,054   INFO  
cfg.MODEL.ROI_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2020-11-23 07:37:18,054   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.rcnn_cls_weight: 1.0
2020-11-23 07:37:18,054   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.rcnn_reg_weight: 1.0
2020-11-23 07:37:18,054   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.rcnn_corner_weight: 1.0
2020-11-23 07:37:18,054   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2020-11-23 07:37:18,054   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2020-11-23 07:37:18,054   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2020-11-23 07:37:18,054   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2020-11-23 07:37:18,054   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2020-11-23 07:37:18,054   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: waymo
2020-11-23 07:37:18,054   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2020-11-23 07:37:18,054   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2020-11-23 07:37:18,055   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2020-11-23 07:37:18,055   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.1
2020-11-23 07:37:18,055   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2020-11-23 07:37:18,055   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2020-11-23 07:37:18,055   INFO  
cfg.OPTIMIZATION = edict()
2020-11-23 07:37:18,055   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 2
2020-11-23 07:37:18,055   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 30
2020-11-23 07:37:18,055   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2020-11-23 07:37:18,055   INFO  cfg.OPTIMIZATION.LR: 0.01
2020-11-23 07:37:18,055   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.001
2020-11-23 07:37:18,055   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2020-11-23 07:37:18,055   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2020-11-23 07:37:18,055   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2020-11-23 07:37:18,055   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2020-11-23 07:37:18,056   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2020-11-23 07:37:18,056   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2020-11-23 07:37:18,056   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2020-11-23 07:37:18,056   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2020-11-23 07:37:18,056   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2020-11-23 07:37:18,056   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2020-11-23 07:37:18,056   INFO  cfg.TAG: pv_rcnn_no_augs
2020-11-23 07:37:18,056   INFO  cfg.EXP_GROUP_PATH: waymo_models
2020-11-23 07:37:18,350   INFO  Loading Waymo dataset
2020-11-23 07:37:19,136   INFO  Total skipped info 0
2020-11-23 07:37:19,136   INFO  Total samples for Waymo dataset: 794
2020-11-23 07:37:19,137   INFO  Total sampled samples for Waymo dataset: 159
2020-11-23 07:37:35,907   INFO  PVRCNN(
  (vfe): MeanVFE()
  (backbone_3d): VoxelBackBone8x(
    (conv_input): SparseSequential(
      (0): SubMConv3d()
      (1): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
      (2): ReLU()
    )
    (conv1): SparseSequential(
      (0): SparseSequential(
        (0): SubMConv3d()
        (1): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
    )
    (conv2): SparseSequential(
      (0): SparseSequential(
        (0): SparseConv3d()
        (1): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (1): SparseSequential(
        (0): SubMConv3d()
        (1): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (2): SparseSequential(
        (0): SubMConv3d()
        (1): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
    )
    (conv3): SparseSequential(
      (0): SparseSequential(
        (0): SparseConv3d()
        (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (1): SparseSequential(
        (0): SubMConv3d()
        (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (2): SparseSequential(
        (0): SubMConv3d()
        (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
    )
    (conv4): SparseSequential(
      (0): SparseSequential(
        (0): SparseConv3d()
        (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (1): SparseSequential(
        (0): SubMConv3d()
        (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (2): SparseSequential(
        (0): SubMConv3d()
        (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
    )
    (conv_out): SparseSequential(
      (0): SparseConv3d()
      (1): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
      (2): ReLU()
    )
  )
  (map_to_bev_module): HeightCompression()
  (pfe): VoxelSetAbstraction(
    (SA_layers): ModuleList(
      (0): StackSAModuleMSG(
        (groupers): ModuleList(
          (0): QueryAndGroup()
          (1): QueryAndGroup()
        )
        (mlps): ModuleList(
          (0): Sequential(
            (0): Conv2d(67, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
            (3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (5): ReLU()
          )
          (1): Sequential(
            (0): Conv2d(67, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
            (3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (5): ReLU()
          )
        )
      )
      (1): StackSAModuleMSG(
        (groupers): ModuleList(
          (0): QueryAndGroup()
          (1): QueryAndGroup()
        )
        (mlps): ModuleList(
          (0): Sequential(
            (0): Conv2d(67, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
            (3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (5): ReLU()
          )
          (1): Sequential(
            (0): Conv2d(67, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
            (3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (5): ReLU()
          )
        )
      )
    )
    (SA_rawpoints): StackSAModuleMSG(
      (groupers): ModuleList(
        (0): QueryAndGroup()
        (1): QueryAndGroup()
      )
      (mlps): ModuleList(
        (0): Sequential(
          (0): Conv2d(5, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU()
          (3): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU()
        )
        (1): Sequential(
          (0): Conv2d(5, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU()
          (3): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU()
        )
      )
    )
    (vsa_point_feature_fusion): Sequential(
      (0): Linear(in_features=544, out_features=128, bias=False)
      (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
    )
  )
  (backbone_2d): BaseBEVBackbone(
    (blocks): ModuleList(
      (0): Sequential(
        (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
        (1): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (3): ReLU()
        (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (6): ReLU()
        (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (9): ReLU()
        (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (12): ReLU()
        (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (15): ReLU()
        (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (18): ReLU()
      )
      (1): Sequential(
        (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
        (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
        (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (3): ReLU()
        (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (6): ReLU()
        (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (9): ReLU()
        (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (12): ReLU()
        (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (15): ReLU()
        (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (18): ReLU()
      )
    )
    (deblocks): ModuleList(
      (0): Sequential(
        (0): ConvTranspose2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (1): Sequential(
        (0): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
    )
  )
  (dense_head): AnchorHeadSingle(
    (cls_loss_func): SigmoidFocalClassificationLoss()
    (reg_loss_func): WeightedSmoothL1Loss()
    (dir_loss_func): WeightedCrossEntropyLoss()
    (conv_cls): Conv2d(512, 18, kernel_size=(1, 1), stride=(1, 1))
    (conv_box): Conv2d(512, 42, kernel_size=(1, 1), stride=(1, 1))
    (conv_dir_cls): Conv2d(512, 12, kernel_size=(1, 1), stride=(1, 1))
  )
  (point_head): PointHeadSimple(
    (cls_loss_func): SigmoidFocalClassificationLoss()
    (cls_layers): Sequential(
      (0): Linear(in_features=544, out_features=256, bias=False)
      (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
      (3): Linear(in_features=256, out_features=256, bias=False)
      (4): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU()
      (6): Linear(in_features=256, out_features=1, bias=True)
    )
  )
  (roi_head): PVRCNNHead(
    (proposal_target_layer): ProposalTargetLayer()
    (reg_loss_func): WeightedSmoothL1Loss()
    (roi_grid_pool_layer): StackSAModuleMSG(
      (groupers): ModuleList(
        (0): QueryAndGroup()
        (1): QueryAndGroup()
      )
      (mlps): ModuleList(
        (0): Sequential(
          (0): Conv2d(131, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU()
          (3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU()
        )
        (1): Sequential(
          (0): Conv2d(131, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU()
          (3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU()
        )
      )
    )
    (shared_fc_layer): Sequential(
      (0): Conv1d(27648, 256, kernel_size=(1,), stride=(1,), bias=False)
      (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
      (3): Dropout(p=0.3)
      (4): Conv1d(256, 256, kernel_size=(1,), stride=(1,), bias=False)
      (5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): ReLU()
    )
    (cls_layers): Sequential(
      (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,), bias=False)
      (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
      (3): Dropout(p=0.3)
      (4): Conv1d(256, 256, kernel_size=(1,), stride=(1,), bias=False)
      (5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): ReLU()
      (7): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
    )
    (reg_layers): Sequential(
      (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,), bias=False)
      (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
      (3): Dropout(p=0.3)
      (4): Conv1d(256, 256, kernel_size=(1,), stride=(1,), bias=False)
      (5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): ReLU()
      (7): Conv1d(256, 7, kernel_size=(1,), stride=(1,))
    )
  )
)
2020-11-23 07:37:35,911   INFO  **********************Start training waymo_models/pv_rcnn_no_augs(default)**********************
epochs:   0%|          | 0/30 [00:00<?, ?it/s]
train:   0%|          | 0/80 [00:00<?, ?it/s][A
train:   1%|▏         | 1/80 [00:03<04:01,  3.05s/it][A
train:   1%|▏         | 1/80 [00:03<04:01,  3.05s/it, total_it=1][Aepochs:   0%|          | 0/30 [00:03<?, ?it/s, loss=5.12, lr=0.001]epochs:   0%|          | 0/30 [00:03<?, ?it/s, loss=5.12, lr=0.001]
train:   2%|▎         | 2/80 [00:04<03:19,  2.56s/it, total_it=1][A
train:   2%|▎         | 2/80 [00:04<03:19,  2.56s/it, total_it=2][Aepochs:   0%|          | 0/30 [00:04<?, ?it/s, loss=17.2, lr=0.001]epochs:   0%|          | 0/30 [00:04<?, ?it/s, loss=17.2, lr=0.001]
train:   4%|▍         | 3/80 [00:05<02:50,  2.21s/it, total_it=2][A
train:   4%|▍         | 3/80 [00:05<02:50,  2.21s/it, total_it=3][Aepochs:   0%|          | 0/30 [00:06<?, ?it/s, loss=10.5, lr=0.001]epochs:   0%|          | 0/30 [00:06<?, ?it/s, loss=10.5, lr=0.001]
train:   5%|▌         | 4/80 [00:07<02:30,  1.98s/it, total_it=3][A
train:   5%|▌         | 4/80 [00:07<02:30,  1.98s/it, total_it=4][Aepochs:   0%|          | 0/30 [00:07<?, ?it/s, loss=5.32, lr=0.001]epochs:   0%|          | 0/30 [00:07<?, ?it/s, loss=5.32, lr=0.001]
train:   6%|▋         | 5/80 [00:08<02:14,  1.79s/it, total_it=4][A
train:   6%|▋         | 5/80 [00:08<02:14,  1.79s/it, total_it=5][Aepochs:   0%|          | 0/30 [00:08<?, ?it/s, loss=5.07, lr=0.001]epochs:   0%|          | 0/30 [00:08<?, ?it/s, loss=5.07, lr=0.001]
train:   8%|▊         | 6/80 [00:10<02:02,  1.66s/it, total_it=5][A
train:   8%|▊         | 6/80 [00:10<02:02,  1.66s/it, total_it=6][Aepochs:   0%|          | 0/30 [00:10<?, ?it/s, loss=5.66, lr=0.001]epochs:   0%|          | 0/30 [00:10<?, ?it/s, loss=5.66, lr=0.001]
train:   9%|▉         | 7/80 [00:11<01:58,  1.62s/it, total_it=6][A
train:   9%|▉         | 7/80 [00:11<01:58,  1.62s/it, total_it=7][Aepochs:   0%|          | 0/30 [00:11<?, ?it/s, loss=4.87, lr=0.001]epochs:   0%|          | 0/30 [00:11<?, ?it/s, loss=4.87, lr=0.001]
train:  10%|█         | 8/80 [00:12<01:52,  1.56s/it, total_it=7][A
train:  10%|█         | 8/80 [00:12<01:52,  1.56s/it, total_it=8][Aepochs:   0%|          | 0/30 [00:13<?, ?it/s, loss=5.3, lr=0.001] epochs:   0%|          | 0/30 [00:13<?, ?it/s, loss=5.3, lr=0.001]
train:  11%|█▏        | 9/80 [00:14<01:44,  1.47s/it, total_it=8][A
train:  11%|█▏        | 9/80 [00:14<01:44,  1.47s/it, total_it=9][Aepochs:   0%|          | 0/30 [00:14<?, ?it/s, loss=4.64, lr=0.001]epochs:   0%|          | 0/30 [00:14<?, ?it/s, loss=4.64, lr=0.001]
train:  12%|█▎        | 10/80 [00:15<01:41,  1.44s/it, total_it=9][A
train:  12%|█▎        | 10/80 [00:15<01:41,  1.44s/it, total_it=10][Aepochs:   0%|          | 0/30 [00:15<?, ?it/s, loss=3.94, lr=0.001]epochs:   0%|          | 0/30 [00:15<?, ?it/s, loss=3.94, lr=0.001]
train:  14%|█▍        | 11/80 [00:17<01:41,  1.48s/it, total_it=10][A
train:  14%|█▍        | 11/80 [00:17<01:41,  1.48s/it, total_it=11][Aepochs:   0%|          | 0/30 [00:17<?, ?it/s, loss=4, lr=0.001]   epochs:   0%|          | 0/30 [00:17<?, ?it/s, loss=4, lr=0.001]
train:  15%|█▌        | 12/80 [00:18<01:40,  1.48s/it, total_it=11][A
train:  15%|█▌        | 12/80 [00:18<01:40,  1.48s/it, total_it=12][Aepochs:   0%|          | 0/30 [00:18<?, ?it/s, loss=4.3, lr=0.001]epochs:   0%|          | 0/30 [00:18<?, ?it/s, loss=4.3, lr=0.001]
train:  16%|█▋        | 13/80 [00:20<01:37,  1.46s/it, total_it=12][A
train:  16%|█▋        | 13/80 [00:20<01:37,  1.46s/it, total_it=13][Aepochs:   0%|          | 0/30 [00:20<?, ?it/s, loss=4.05, lr=0.001]epochs:   0%|          | 0/30 [00:20<?, ?it/s, loss=4.05, lr=0.001]
train:  18%|█▊        | 14/80 [00:21<01:34,  1.43s/it, total_it=13][A
train:  18%|█▊        | 14/80 [00:21<01:34,  1.43s/it, total_it=14][Aepochs:   0%|          | 0/30 [00:21<?, ?it/s, loss=4.45, lr=0.001]epochs:   0%|          | 0/30 [00:21<?, ?it/s, loss=4.45, lr=0.001]
train:  19%|█▉        | 15/80 [00:22<01:32,  1.43s/it, total_it=14][A
train:  19%|█▉        | 15/80 [00:22<01:32,  1.43s/it, total_it=15][Aepochs:   0%|          | 0/30 [00:22<?, ?it/s, loss=3.89, lr=0.001]epochs:   0%|          | 0/30 [00:22<?, ?it/s, loss=3.89, lr=0.001]
train:  20%|██        | 16/80 [00:24<01:30,  1.41s/it, total_it=15][A
train:  20%|██        | 16/80 [00:24<01:30,  1.41s/it, total_it=16][Aepochs:   0%|          | 0/30 [00:24<?, ?it/s, loss=3.71, lr=0.00101]epochs:   0%|          | 0/30 [00:24<?, ?it/s, loss=3.71, lr=0.00101]
train:  21%|██▏       | 17/80 [00:25<01:26,  1.37s/it, total_it=16][A
train:  21%|██▏       | 17/80 [00:25<01:26,  1.37s/it, total_it=17][Aepochs:   0%|          | 0/30 [00:25<?, ?it/s, loss=5.21, lr=0.00101]epochs:   0%|          | 0/30 [00:25<?, ?it/s, loss=5.21, lr=0.00101]
train:  22%|██▎       | 18/80 [00:26<01:23,  1.35s/it, total_it=17][A
train:  22%|██▎       | 18/80 [00:26<01:23,  1.35s/it, total_it=18][Aepochs:   0%|          | 0/30 [00:26<?, ?it/s, loss=3.95, lr=0.00101]epochs:   0%|          | 0/30 [00:26<?, ?it/s, loss=3.95, lr=0.00101]
train:  24%|██▍       | 19/80 [00:28<01:21,  1.34s/it, total_it=18][A
train:  24%|██▍       | 19/80 [00:28<01:21,  1.34s/it, total_it=19][Aepochs:   0%|          | 0/30 [00:28<?, ?it/s, loss=4.51, lr=0.00101]epochs:   0%|          | 0/30 [00:28<?, ?it/s, loss=4.51, lr=0.00101]
train:  25%|██▌       | 20/80 [00:29<01:19,  1.33s/it, total_it=19][A
train:  25%|██▌       | 20/80 [00:29<01:19,  1.33s/it, total_it=20][Aepochs:   0%|          | 0/30 [00:29<?, ?it/s, loss=4.73, lr=0.00101]epochs:   0%|          | 0/30 [00:29<?, ?it/s, loss=4.73, lr=0.00101]
train:  26%|██▋       | 21/80 [00:30<01:18,  1.32s/it, total_it=20][A
train:  26%|██▋       | 21/80 [00:30<01:18,  1.32s/it, total_it=21][Aepochs:   0%|          | 0/30 [00:30<?, ?it/s, loss=4.57, lr=0.00101]epochs:   0%|          | 0/30 [00:30<?, ?it/s, loss=4.57, lr=0.00101]
train:  28%|██▊       | 22/80 [00:32<01:17,  1.34s/it, total_it=21][A
train:  28%|██▊       | 22/80 [00:32<01:17,  1.34s/it, total_it=22][Aepochs:   0%|          | 0/30 [00:32<?, ?it/s, loss=5.09, lr=0.00101]epochs:   0%|          | 0/30 [00:32<?, ?it/s, loss=5.09, lr=0.00101]
train:  29%|██▉       | 23/80 [00:33<01:17,  1.36s/it, total_it=22][A
train:  29%|██▉       | 23/80 [00:33<01:17,  1.36s/it, total_it=23][Aepochs:   0%|          | 0/30 [00:33<?, ?it/s, loss=4.19, lr=0.00101]epochs:   0%|          | 0/30 [00:33<?, ?it/s, loss=4.19, lr=0.00101]
train:  30%|███       | 24/80 [00:34<01:15,  1.35s/it, total_it=23][A
train:  30%|███       | 24/80 [00:34<01:15,  1.35s/it, total_it=24][Aepochs:   0%|          | 0/30 [00:34<?, ?it/s, loss=3.91, lr=0.00101]epochs:   0%|          | 0/30 [00:34<?, ?it/s, loss=3.91, lr=0.00101]
train:  31%|███▏      | 25/80 [00:36<01:14,  1.36s/it, total_it=24][A
train:  31%|███▏      | 25/80 [00:36<01:14,  1.36s/it, total_it=25][Aepochs:   0%|          | 0/30 [00:36<?, ?it/s, loss=4.51, lr=0.00101]epochs:   0%|          | 0/30 [00:36<?, ?it/s, loss=4.51, lr=0.00101]
train:  32%|███▎      | 26/80 [00:37<01:12,  1.35s/it, total_it=25][A
train:  32%|███▎      | 26/80 [00:37<01:12,  1.35s/it, total_it=26][Aepochs:   0%|          | 0/30 [00:37<?, ?it/s, loss=3.36, lr=0.00102]epochs:   0%|          | 0/30 [00:37<?, ?it/s, loss=3.36, lr=0.00102]
train:  34%|███▍      | 27/80 [00:38<01:11,  1.34s/it, total_it=26][A
train:  34%|███▍      | 27/80 [00:38<01:11,  1.34s/it, total_it=27][Aepochs:   0%|          | 0/30 [00:39<?, ?it/s, loss=4.09, lr=0.00102]epochs:   0%|          | 0/30 [00:39<?, ?it/s, loss=4.09, lr=0.00102]
train:  35%|███▌      | 28/80 [00:40<01:10,  1.35s/it, total_it=27][A
train:  35%|███▌      | 28/80 [00:40<01:10,  1.35s/it, total_it=28][Aepochs:   0%|          | 0/30 [00:40<?, ?it/s, loss=3.67, lr=0.00102]epochs:   0%|          | 0/30 [00:40<?, ?it/s, loss=3.67, lr=0.00102]
train:  36%|███▋      | 29/80 [00:41<01:08,  1.35s/it, total_it=28][A
train:  36%|███▋      | 29/80 [00:41<01:08,  1.35s/it, total_it=29][Aepochs:   0%|          | 0/30 [00:41<?, ?it/s, loss=4.43, lr=0.00102]epochs:   0%|          | 0/30 [00:41<?, ?it/s, loss=4.43, lr=0.00102]
train:  38%|███▊      | 30/80 [00:43<01:09,  1.39s/it, total_it=29][A
train:  38%|███▊      | 30/80 [00:43<01:09,  1.39s/it, total_it=30][Aepochs:   0%|          | 0/30 [00:43<?, ?it/s, loss=3.25, lr=0.00102]epochs:   0%|          | 0/30 [00:43<?, ?it/s, loss=3.25, lr=0.00102]
train:  39%|███▉      | 31/80 [00:44<01:11,  1.45s/it, total_it=30][A
train:  39%|███▉      | 31/80 [00:44<01:11,  1.45s/it, total_it=31][Aepochs:   0%|          | 0/30 [00:44<?, ?it/s, loss=4.03, lr=0.00102]epochs:   0%|          | 0/30 [00:44<?, ?it/s, loss=4.03, lr=0.00102]
train:  40%|████      | 32/80 [00:46<01:08,  1.42s/it, total_it=31][A
train:  40%|████      | 32/80 [00:46<01:08,  1.42s/it, total_it=32][Aepochs:   0%|          | 0/30 [00:46<?, ?it/s, loss=5.35, lr=0.00102]epochs:   0%|          | 0/30 [00:46<?, ?it/s, loss=5.35, lr=0.00102]
train:  41%|████▏     | 33/80 [00:47<01:06,  1.40s/it, total_it=32][A
train:  41%|████▏     | 33/80 [00:47<01:06,  1.40s/it, total_it=33][Aepochs:   0%|          | 0/30 [00:47<?, ?it/s, loss=3.47, lr=0.00102]epochs:   0%|          | 0/30 [00:47<?, ?it/s, loss=3.47, lr=0.00102]
train:  42%|████▎     | 34/80 [00:48<01:03,  1.38s/it, total_it=33][A
train:  42%|████▎     | 34/80 [00:48<01:03,  1.38s/it, total_it=34][Aepochs:   0%|          | 0/30 [00:48<?, ?it/s, loss=4.55, lr=0.00103]epochs:   0%|          | 0/30 [00:48<?, ?it/s, loss=4.55, lr=0.00103]
train:  44%|████▍     | 35/80 [00:50<01:01,  1.37s/it, total_it=34][A
train:  44%|████▍     | 35/80 [00:50<01:01,  1.37s/it, total_it=35][Aepochs:   0%|          | 0/30 [00:50<?, ?it/s, loss=3.38, lr=0.00103]epochs:   0%|          | 0/30 [00:50<?, ?it/s, loss=3.38, lr=0.00103]
train:  45%|████▌     | 36/80 [00:51<01:00,  1.38s/it, total_it=35][A
